module.exports = `
    type Mutation {
        #  ---------- USER MUTATIONS -------
        login(fields:loginInput!):User!

        #  ---------- MEMBER MUTATIONS -------
        addNewMember(fields:addNewMemberInput!): Members
        updateMember(fields:updateMemberInput!): Members
        addFavoriteProject(fields:addFavoriteProjectInput!): Members
        addPreferencesToMember(fields:addPreferencesToMemberInput!): Members
        addNodesToMember(fields:addNodesToMemberInput!): Members
        updateNodesToMember(fields:updateNodesToMemberInput!): Members
        updateNodesToMemberMultiTypeNode(fields:updateNodesToMemberMultiTypeNodeInput!): Members
        deleteNodesFromMember(fields:deleteNodesFromMemberInput!): Members
        deleteMember(fields:deleteMemberInput!): Members
        # addSkillToMember(fields:addSkillToMember_Input!):Members
        createFakeUser(fields: createFakeUserInput ): Members
        createFakeUserCVnew(fields: createFakeUserCVnewInput ): Members
        uploadUserDataGPT(fields: uploadUserDataGPTInput ): Members
        updateMemberSignalInfo(fields: updateMemberSignalInfoInput ): Members
        updateStateEdenChat(fields: updateStateEdenChatInput ): Members
        reCreateMemberNeo(fields: reCreateMemberNeoInput ): [Members]
        checkUsersForTGConnection(fields: checkUsersForTGConnectionInput ): updateTGOutput
        initiateConnectionTelegram(fields: initiateConnectionTelegramInput ): updateTGOutput
        endorseAttribute(fields:endorseAttributeInput!): Members

        #  ---------- ENDORSEMENT MUTATIONS -------
        addEndorsement(fields: addEndorsementInput ): Endorsement
        findEndorsements(fields: findEndorsementsInput ): [Endorsement]
        deleteAllEndorsements(fields: deleteAllEndorsementsInput ): Boolean
        calculateReputation(fields: calculateReputationInput ): Members
        createMultipleFakeEndorsementAndReview(fields: createMultipleFakeEndorsementAndReviewInput ): Boolean
        createFakeEndorsement(fields: createFakeEndorsementInput ): Endorsement
        createEndorsementLink(fields: createEndorsementLinkInput ): EndorsementLink

        #  ---------- REVIEW MUTATIONS -------
        addReview(fields: addReviewInput ): Review
        createFakeReview(fields: createFakeReviewInput ): Review
        findReviews(fields: findReviewsInput ): [Review]



        #  ---------- PROJECT MUTATIONS -------
        updateProject(fields:updateProjectInput!):Project
        addNodesToProjectRole(fields:addNodesToProjectRoleInput!):Project
        updateNodesToProjectRole(fields:updateNodesToProjectRoleInput!):Project
        addProjectRole(fields:addProjectRoleInput!):Project
        deleteNodesToProjectRole(fields:deleteNodesToProjectRoleInput!):Project
        newTweetProject(fields:newTweetProjectInput!):tweetsProject
        approveTweet(fields:approveTweetInput!):Project
        changeTeamMember_Phase_Project(fields:changeTeamMember_Phase_ProjectInput!):Project
        createNewTeam(fields:createNewTeamInput!):Team
        createNewRole(fields:createNewRoleInput!):Role
        createNewEpic(fields:createNewEpicInput!):Epic
        deleteProject(fields:deleteProjectInput):Project
        createProject(fields:createProjectInput):Project

        

        #  ---------- SKILL MUTATIONS -------
        # createSkill(fields:createSkillInput): Skills
        # createSkills(fields:createSkillsInput): [Skills]
        # createApprovedSkill(fields:createApprovedSkillInput): Skills
        # approveOrRejectSkill(fields:approveOrRejectSkillInput): Skills

        #relatedSkills(fields:relatedSkillsInput): Skills

        #  ---------- NODE MUTATIONS -------
        createNode(fields:createNodeInput): Node
        relatedNode(fields:relatedNodeInput): Node
        relatedNode_name(fields:relatedNode_nameInput): Node
        createNodeCategoryGroup(fields:createNodeCategoryGroupInput): Node


        # ------------- CONVERSATION MUTATION -----------------
        updateConversation(fields:updateConversationInput): Conversation
        updateConvSummaries(fields:updateConvSummariesInput): [Conversation]


        # ------------- QUESTION EDENAI MUTATION -----------------
        addQuestionToEdenAI(fields:addQuestionToEdenAIInput): addQuestionToEdenAIOutput


        # ------------- POSITION MUTATION -----------------
        updatePosition(fields:updatePositionInput): Position
        updatePositionGeneralDetails(fields:updatePositionGeneralDetailsInput): Position
        updateUrl(fields:updateUrlInput): Position
        autoUpdatePositionCompInformation(fields:autoUpdatePositionCompInformationInput): Position
        addQuestionsToAskPosition(fields:addQuestionsToAskPositionInput): Position
        interviewQuestionCreationUser(fields:interviewQuestionCreationUserInput): Position
        moveCandidateToPosition(fields:moveCandidateToPositionInput): Position
        moveCandidateToPosition_V2(fields:moveCandidateToPosition_V2Input): Position
        moveCandidateToPosition_V3(fields:moveCandidateToPosition_V3Input): Position
        deleteQuestionsToAskPosition(fields:deleteQuestionsToAskPositionInput): Position
        pitchPositionToCandidate(fields:pitchPositionToCandidateInput): pitchPositionToCandidateOutput
        findKeyAttributeAndPotentialPosition(fields:findKeyAttributeAndPotentialPositionInput): Position
        findKeyAttributeAndPotentialCandidate(fields:findKeyAttributeAndPotentialCandidateInput): Position
        addCandidatesPosition(fields:addCandidatesPositionInput): Position
        deletePositionCandidate(fields:deletePositionCandidateInput): [CandidateType]
        addConvRecruiterToPosition(fields:addConvRecruiterToPositionInput): Position
        updatePositionUserAnswers(fields:updatePositionUserAnswersInput): [Position]
        updateAnalysisEdenAICandidates(fields:updateAnalysisEdenAICandidatesInput): [Position]
        updatePositionConvRecruiter(fields:updatePositionConvRecruiterInput): [Position]
        createTalentListPosition(fields:createTalentListPositionInput): Position
        updateUsersTalentListPosition(fields:updateUsersTalentListPositionInput): Position
        addNodesToPosition(fields:addNodesToPositionInput): Position


         # ------------- COMPANY MUTATION -----------------
        updateCompany(fields:updateCompanyInput): Company
        updateCompanyDetails(fields:updateCompanyDetailsInput): Company
        updateUrlCompany(fields:updateUrlInput): Company
        addEmployeesCompany(fields:addEmployeesCompanyInput): Company
        subscribeToCommunity(fields:subscribeToCommunityInput): Company


         # ------------- QUERY RESPONSE MUTATION -----------------
        updateQueryResponse(fields:updateQueryResponseInput): QueryResponse
        respondToQuery(fields:respondToQueryInput): QueryResponse
        deleteQueryResponse(fields:deleteQueryResponseInput): QueryResponse



        # ------------- MEMORY PINECONE MUTATION -----------------
        addMemory(fields:addMemoryInput): MemoryPinecone
        deleteMemories(fields:deleteMemoriesInput): [MemoryPinecone]


        # ------------- CARD MEMORY MUTATION -----------------
        addCardMemory(fields:addCardMemoryInput): CardMemory
        deleteCardMemory(fields:deleteCardMemoryInput): [CardMemory]
        createCardsForPosition(fields:createCardsForPositionInput): [CardMemory]
        autoCreateCardsForPosition(fields:autoCreateCardsForPositionInput): [CardMemory]
        autoCreateCardsCandidatesAndScore(fields:autoCreateCardsCandidatesAndScoreInput): Position
        autoCalculatePrioritiesAndQuestions(fields:autoCalculatePrioritiesAndQuestionsInput): Position
        createCardsCandidateForPosition(fields:createCardsCandidateForPositionInput): [CardMemory]
        calculateScoreCardCandidateToPosition(fields:calculateScoreCardCandidateToPositionInput): [CardMemory]



        #  ---------- ROLE MUTATIONS -------
        updateRoleTemplate(fields:createRoleInput): RoleTemplate

        #  ---------- SERVER MUTATIONS -------
        updateServer(fields:updateServerInput): ServerTemplate


        #  ---------- GRANT MUTATIONS -------
        updateGrant(fields:updateGrantInput): GrantTemplate
        addNodesToGrant(fields:addNodesToGrantInput): GrantTemplate
        applyGrant(fields:applyGrantInput): GrantTemplate
        updateNodesToGrant(fields: updateNodesToGrantInput): GrantTemplate


        #  ---------- SKILL CATEGORY MUTATIONS -------
        # updateSkillCategory(fields:updateSkillCategoryInput): SkillCategory

        #  ---------- SKILL SUB CATEGORY MUTATIONS -------
        # updateSkillSubCategory(fields:updateSkillSubCategoryInput): SkillSubCategory


        #  ---------- SKILL CATEGORY MUTATIONS -------
        createProjectUpdate(fields:createProjectUpdateInput!):ProjectUpdate


        #------------- ROOMS CATAGORY MUTATIONS ------
        createRoom(fields: createRoomInput!): Rooms
        enterRoom(fields: enterRoomInput!): Rooms
        exitRoom(fields: enterRoomInput!): Rooms
        updateMemberInRoom(fields: updateMemberInRoomInput): Members
        addNodesToMemberInRoom(fields: addNodesToMemberInRoomInput): Members
        deleteNodesFromMemberInRoom(fields: deleteNodesFromMemberInRoomInput): Members
        updateNodesToMemberInRoom(fields: updateNodesToMemberInRoomInput ): Members

        #  ---------- CHAT MUTATIONS -------
        addNewChat(fields: addNewChatInput): Chats
        updateChatReply(fields: updateChatReplyInput): Chats
        updateChatResult(fields: updateChatResultInput): Chats


        addChatExternalApp(fields: addChatExternalAppInput): ChatExternalApp


        # ------------- AI MUTATIONS ------------
        addMessage(fields: addMessageInput): AI
        storeLongTermMemory(fields: storeLongTermMemoryInput): storeLongTermMemoryOutput
        storeLongTermMemorySummary(fields: storeLongTermMemorySummaryInput): storeLongTermMemorySummaryOutput
        websiteToMemoryCompany(fields: websiteToMemoryCompanyInput): websiteToMemoryCompanyOutput
        positionTextToExtraQuestions(fields: positionTextToExtraQuestionsInput): positionTextToExtraQuestionsOutput
        conversationCVPositionToReport(fields: conversationCVPositionToReportInput): conversationCVPositionToReportOutput
        positionTextAndConvoToReportCriteria(fields: positionTextAndConvoToReportCriteriaInput): positionTextAndConvoToReportCriteriaOutput
        positionSuggestQuestionsAskCandidate(fields: positionSuggestQuestionsAskCandidateInput): positionSuggestQuestionsAskCandidateOutput
        saveCVtoUser(fields: saveCVtoUserInput): saveCVtoUserOutput
        autoUpdateUserInfoFromCV(fields: autoUpdateUserInfoFromCVInput): autoUpdateUserInfoFromCVOutput
        autoUpdateMemoryFromCV(fields: autoUpdateMemoryFromCVInput): autoUpdateMemoryFromCVOutput
        talkToEdenGeneral_V1(fields: talkToEdenGeneral_V1Input): talkToEdenGeneral_V1Output
        autoUpdateMemoryFromPositionRequirments(fields: autoUpdateMemoryFromPositionRequirmentsInput): autoUpdateMemoryFromPositionRequirmentsOutput
        createCoreMemories(fields: createCoreMemoriesInput): createCoreMemoriesOutput
        updatePrioritiesTradeOffs(fields: updatePrioritiesTradeOffsInput): updatePrioritiesTradeOffsOutput
        addMessages(fields: addMessagesInput): [AI]
        secondInterviewLetter(fields: secondInterviewLetterInput): secondInterviewLetterOutput
        rejectionLetter(fields: rejectionLetterInput): rejectionLetterOutput

        updateMessage(fields: updateMessageInput): AI
        useAI_OnMessage(fields: useAI_OnMessageInput): useAI_OnMessageOutput
        messageToGPT(fields: messageToGPTInput): messageToGPTOutput
        inputToGPT(fields: inputToGPTInput): inputToGPTOutput
        CVtoSummary(fields: CVtoSummaryInput): CVtoSummaryOutput
        CVtoJobs(fields: CVtoJobsInput): CVtoJobsOutput
        cvMapKG(fields: cvMapKGInput): cvMapKGOutput



        # ------------- ERROR MUTATIONS ------------
        createError(fields: createErrorInput!): ErrorLog
        deleteError(fields: deleteErrorInput!): ErrorLog


        # -------------- EDEN METRICS --------------
        saveCoreProductFeatureInteration(fields:saveCoreProductFeatureInterationInput):Boolean
        saveDailyLogin(fields: saveDailyLoginInput):Boolean
        saveActionsPerformed(fields: saveActionsPerformedInput):Boolean
    }
`