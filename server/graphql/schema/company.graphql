module.exports = `
    
    type Company {
        _id: ID
        name: String
        imageUrl: String
        url: String
        slug: String
        description: String,
        employees: [EmployeeType]
        positions: [Position]
        communitySubscribers: [communitySubscribersType]
        positionSubscribersCommunity: [Position]
        companySubscribersCommunity: [Company]
        type: typeCompany
        candidatesNum: Int
        skillsNum: Int
        stripe: StripeType
        communitiesSubscribed: [Company]

        employeesNumber: Int
        tags: [String]
        whatsToLove: String
        
        mission: String
        insights: [CompanyInsightType]
        edenTake: String

        funding: [CompanyFoundRoundType]
        culture: CompanyCultureType
        
        benefits: String
        values: String
        
        founders: String
        glassdoor: String
    }

    type StripeType {
        session: StripeSessionType,
        customerID: String,
        product: StripeProductType,
    }
    
    type CompanyInsightType {
        letter: String,
        text: String,
    }
    
    type CompanyFoundRoundType {
        name: String,
        date: String,
        amount: String,
    }
    
    type CompanyCultureType {
        tags: [String],
        description: String,
    }

    type StripeSessionType {
        ID: String
    }

    type StripeProductType {
        ID: String
    }

    type communitySubscribersType {
        positionID: ID
        companyID: ID
    }

    type EmployeeType {
        typeT: employeeRole
        status: employeeStatus
        user: Members
    }

    input updateCompanyInput {
        _id: ID
        name: String
        slug: String
        description: String
        type: typeCompany
        addCompanySubscribersID: [ID]
        addPositionSubscribersID: [ID]
        communitiesSubscribedID: [ID]
    }
    
    input updateCompanyDetailsInput {
        slug: String
        description: String
        imageUrl: String
        
        employeesNumber: Int
        tags: [String]
        whatsToLove: String
        
        mission: String
        insights: [CompanyInsightTypeInput]
        edenTake: String

        funding: [CompanyFoundRoundTypeInput]
        culture: CompanyCultureTypeInput
        
        benefits: String
        values: String
        
        founders: String
        glassdoor: String
    }
    
    input updateUrlInput {
        companyID: ID
        url: String
    }

    input autoUpdatePositionCompInformationInput {
        positionID: ID
        mustUpdate: [String]
    }

    input EmployeeTypeInput {
        typeT: employeeRole
        userID: String
        status: employeeStatus
    }

    input findCompanyInput {
        _id: ID,
    }

    input findCompaniesInput {
        _id: [ID],
    }

    input findCompanyFromSlugInput {
        slug: String,
    }
    
    input addEmployeesCompanyInput {
        companyID: ID
        employees: [EmployeeTypeInput]
    }  
    
    input subscribeToCommunityInput {
        companyID: ID
        communityID: ID
    } 

    input CompanyInsightTypeInput {
        letter: String,
        text: String,
    }
    
    input CompanyFoundRoundTypeInput {
        name: String,
        date: String,
        amount: String,
    }
    
    input CompanyCultureTypeInput {
        tags: [String],
        description: String,
    } 

    enum typeCompany {
        COMPANY
        COMMUNITY
    }

    enum employeeRole {
        ADMIN
        EMPLOYEE
    }
    enum employeeStatus {
        ACTIVE
        REJECTED
        PENDING
    }

`