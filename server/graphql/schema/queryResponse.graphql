module.exports = `
    
    type QueryResponse {
        _id: ID,
        sender: senderType,
        responder: responderType,
        conversation: Conversation,
        phase: phaseQueryResponseEnum,
        question: questionQueryType,
        answer: answerType,

    }

    input findQueryResponsesInput {
        _id: [ID]
        senderID: ID
        senderType: sendRespTypeEnum
        responderID: ID
        responderType: sendRespTypeEnum
        phase: phaseQueryResponseEnum
    }

    input queryResponseUpdatedInput {
        _id: [ID]
        senderID: ID
        senderType: sendRespTypeEnum
        responderID: ID
        responderType: sendRespTypeEnum
        phase: phaseQueryResponseEnum
    }

    input updateQueryResponseInput {
        _id: ID
        phase: phaseQueryResponseEnum
        senderID: ID
        senderType: sendRespTypeEnum
        responderID: ID
        responderType: sendRespTypeEnum
        question: String
        answer: String
        conversationID: ID
    }

    input respondToQueryInput {
        _id: ID
        conversationID: ID
    }

    input deleteQueryResponseInput {
        _id: ID
    }

    enum sendRespTypeEnum {
        POSITION
        USER
    }

    type senderType {
        positionID: String,
        userID: String,
    }

    type responderType {
        positionID: String,
        userID: String,
    }

    type questionQueryType {
        content: String,
    }

    type answerType {
        content: String,
    }

    enum phaseQueryResponseEnum {
        QUERY
        RESPONDED
        VIEWED
        ARCHIVED
    }


    input addQuestionToEdenAIInput {
        content: String
    }

`