module.exports = `
 
    type CardMemory {
        _id: ID
        content: String
        priority: Int
        tradeOffBoost: Int
        type: typeCardMemoryEnum
        authorCard: authorCardMemory
        score: scoreCardMemory
        connectedCards: [connectedCards]
        keyPriority: Boolean
        futurePotential: Boolean
        pineconeDB: pineconeDBType
    }

    type pineconeDBType {
        pineconeID: String,
        text: String,
        metadata: metadataType
    }

    type metadataType {
        label: String,
        database: String,
        positionID: String,
        userID: String,
    }

    type connectedCards {
        card: CardMemory
        score: Float
        reason: String
        agent: [agentScoreCard]
    }

    type scoreCardMemory {
        overall: Float
        reason: String
        agent: [agentScoreCard]
    }

    type agentScoreCard {
        category: categoryAgentScoreCardEnum
        score: Float
        reason: String
    }
    

    type authorCardMemory {
        companyID: ID
        positionID: ID
        userID: ID
        category: categoryCardMemoryEnum
    }

    input addCardMemoryInput {
        _id: ID
        content: String
        priority: Int
        tradeOffBoost: Int
        type: typeCardMemoryEnum
        connectedCards: [connectedCardsInput]
        authorCard: authorCardMemoryInput
        score: scoreCardMemoryInput
    }

    input authorCardMemoryInput {
        companyID: ID
        positionID: ID
        userID: ID
        category: categoryCardMemoryEnum
    }

    input scoreCardMemoryInput {
        overall: Float
        reason: String
        agent: [agentScoreCardInput]
    }

    input agentScoreCardInput {
        category: categoryAgentScoreCardEnum
        score: Float
        reason: String
    }

    input connectedCardsInput {
        cardID: ID
        score: Float
        reason: String
        agent: [agentScoreCardInput]
    }

    input deleteCardMemoryInput {
        _id: [ID]
        companyID: ID
        userID: ID
        positionID: ID
    }

    input createCardsForPositionInput {
        positionID: ID
    }

    input createCardsCandidateForPositionInput {
        userID: ID
        positionID: ID
    }

    input calculateScoreCardCandidateToPositionInput {
        userID: ID
        positionID: ID
    }

    input findCardMemoriesInput {
        _id: [ID]
        companyID: ID
        userID: ID
        positionID: ID
        connectCardType: connectCardTypeEnum
    }

    enum connectCardTypeEnum {
        filterUser
    }

    enum typeCardMemoryEnum {
        TECHNICAL_SKILLS
        SOFT_SKILLS
        BEHAVIOR
        EXPERIENCE
        INDUSTRY_KNOWLEDGE
        DOMAIN_EXPERTISE
        INTERESTS
        CORE_VALUES
        GOALS
        EDUCATION
        OTHER
    }

    enum categoryCardMemoryEnum {
        COMPANY
        POSITION
        CANDIDATE
    }

    enum categoryAgentScoreCardEnum {
        CREDIBILITY
        CONSISTENCY
        ALIGNMENT
        EXPERT
        GENERAL
    }

    


`