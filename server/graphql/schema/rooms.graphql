module.exports = `
    
    type Rooms {
        _id: ID,
        name: String,
        description: String,
        avatar: String,
        serverID: String,
        hosts: [Members],
        members: [Members],
        registeredAt: String,
    }


    input findRoomsInput {
        _id: ID,
        serverID: String,
    }

    input createRoomInput {
        _id: String,
        name: String,
        description: String,
        avatar: String,
        serverID: String,
        hostID: [String],
    }

    input enterRoomInput {
        roomID: ID
        memberID: ID
    }

    input updateMemberInRoomInput {
        roomID: ID
        memberID: ID
        discordName: String
        discordAvatar: String
        discriminator: String
        bio: String

        onbording: onboardingInput

        content: contentInput
        interest: String
        timeZone: String
        serverID: String,
        skills: [skillInput_member]
        memberRole: findRoleTemplateInput
        

        hoursPerWeek: Float,

        previousProjects: [previousProjectsInput],

        links: [linkInput],
    }

    input addNodesToMemberInRoomInput {
        memberID: ID
        nodesID: [String]
        RoomID: ID
    }

    input deleteNodesFromMemberInRoomInput {
        memberID: ID
        nodesID: [String]
        RoomID: ID
    }

     input nodesID_levelInput {
        nodeID: ID
        orderIndex: Int
        level: Float 
        aboveNodes: [ID]
    }

    input updateNodesToMemberInRoomInput {
        nodesID: [String]
        nodeType: String
        nodesID_level: [nodesID_levelInput]
        roomID: ID
    }

    type PaginatedRooms {
        roomsData: [Rooms]
        pageInfo: PageInfo
    }


    type PageInfo {
        hasNextPage : Boolean
        hasPrevPage: Boolean
        start : String
        end: String
        currentPage: Int
        totalPages: Int
        totalResults: Int
    }
`